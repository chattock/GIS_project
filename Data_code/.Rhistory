knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(tidyverse)
library(sf)
#census_api_key("XXXXXXXXXXXXXXXXXXXXXXXXXXX", install = TRUE) # Substitute the XXXXXX string for your own Census API key
options(tigris_use_cache = TRUE)
view_vars <- load_variables(2022, "acs5", cache = TRUE)
View(view_vars)
view_vars_filter <- view_vars %>% filter(str_detect(concept, "INCOME"))
View(view_vars_filter)
nyc <- get_acs(
state = "NY",
county = "New York",
geography = "tract",
variables = "B19013_001",
geometry = TRUE,
year = 2022
)
head(nyc)
nyc %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma")
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(tidyverse)
library(sf)
#census_api_key("XXXXXXXXXXXXXXXXXXXXXXXXXXX", install = TRUE) # Substitute the XXXXXX string for your own Census API key
options(tigris_use_cache = TRUE)
view_vars <- load_variables(2022, "acs5", cache = TRUE)
View(view_vars)
view_vars_filter <- view_vars %>% filter(str_detect(concept, "INCOME"))
View(view_vars_filter)
nyc <- get_acs(
state = "NY",
county = "New York",
geography = "tract",
variables = "B19013_001",
geometry = TRUE,
year = 2022
)
head(nyc)
nyc %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma")
table_race <- get_acs(
state = "NY",
county = "New York",
geography = "tract",
table = "B02001",  # use table to GET all the variables in this given category
output = "wide",
year = 2022
)
table_race <- select(table_race,-c(NAME))
table_race <- rename(table_race, all_ppl_race = B02001_001E, black = B02001_003E)
head(table_race)
tables_all <- left_join(nyc, table_v1, by = "GEOID") %>%
left_join(table_v2, by = "GEOID") %>%
left_join(table_v3, by = "GEOID") %>%
left_join(table_v4, by = "GEOID")
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(tidyverse)
library(sf)
# census_api_key("87fac3de0a7cab36f86985df89704a8f8fe5a829", install = TRUE) #this is Ana's key - you need to replace it!
options(tigris_use_cache = TRUE) #  tidycensus will use the tigris package to retrieve the corresponding geographic dataset from the US Census Bureau and pre-merge it with the tabular data obtained from the Census API.
# view_vars <- load_variables(2022, "acs5", cache = TRUE)
#
# View(view_vars)
#
# view_vars_filter <- view_vars %>% filter(str_detect(concept, "INCOME"))
#
# view_vars_filter$code <- substr(view_vars_filter$name, 1, nchar(view_vars_filter$name) - 4)
# view_vars_filter$sample <- substr(view_vars_filter$name, nchar(view_vars_filter$name) - 2, nchar(view_vars_filter$name))
# view_vars_filter <- view_vars_filter %>% filter(sample=="001")
cook <- get_acs(
state = "IL",
county = c("Cook"),
geography = "tract",
variables = "B19013_001",
geometry = TRUE,
year = 2022
)
cook <- select(cook,-c(NAME, variable, moe)) %>% rename(B19013_001E = estimate)
get_cook_data <- function(table_name) {
cook_data <- get_acs(
state = "IL",
county = c("Cook"),
geography = "tract",
table = table_name,
output = "wide",
year = 2022
)
cook_data <- select(cook_data,-c(NAME))
return(cook_data)
}
cook1 <- get_cook_data("B02001")
cook2 <- get_cook_data("B23006")
cook3 <- get_cook_data("C27012")
cook4 <- get_cook_data("B08006")
cook5 <- get_cook_data("B09010")
cook6 <- get_cook_data("B09019")
cook7 <- get_cook_data("B17001")
cook_all <- left_join(cook, cook1, by = "GEOID") %>%
left_join(cook2, by = "GEOID") %>%
left_join(cook3, by = "GEOID") %>%
left_join(cook4, by = "GEOID") %>%
left_join(cook5, by = "GEOID") %>%
left_join(cook6, by = "GEOID") %>%
left_join(cook7, by = "GEOID")
# You can export your table
st_write(cook_all, "/Users/anavarela/Dropbox/@_LSE/Teaching/GY476/Assessment/Summative/ACS_2018_2022_cook_vars.csv", delete_dsn = TRUE)
# Geopackage with data and geometry:
st_write(cook_all,
dsn = "/Users/anavarela/Dropbox/@_LSE/Teaching/GY476/Assessment/Summative/z_aux/cook_all_shp.gpkg",
driver = "GPKG",
delete_dsn = TRUE)
cook_geometry <- cook %>% select(GEOID, geometry)
# Geopackage with just geometry:
st_write(cook_geometry,
dsn = "/Users/anavarela/Dropbox/@_LSE/Teaching/GY476/Assessment/Summative/z_aux/cook_geometry.gpkg",
driver = "GPKG",
delete_dsn = TRUE)
